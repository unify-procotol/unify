{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "blog-layout",
  "type": "registry:component",
  "title": "Blog Layout",
  "description": "Clean blog-style layout for article listings and content display",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/default/blog-layout/custom-blog-layout.tsx",
      "content": "import React from 'react';\n\n// Modern blog layout renderer\nexport const BlogLayout = (data: any[], options: any) => {\n  const formatDate = (dateString: string) => {\n    if (!dateString) return \"Unknown\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { \n      year: 'numeric',\n      month: 'long', \n      day: 'numeric'\n    });\n  };\n\n  const getReadingTime = (content: string) => {\n    if (!content) return \"5 min read\";\n    const words = content.split(' ').length;\n    const minutes = Math.ceil(words / 200);\n    return `${minutes} min read`;\n  };\n\n  const getAuthorInitials = (name: string) => {\n    if (!name) return \"??\";\n    return name.split(' ').map(word => word[0]).join('').toUpperCase().slice(0, 2);\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-6 py-8\">\n      <div className=\"space-y-6\">\n        {data.map((record, index) => {\n          const title = record.name || record.title || `Article ${index + 1}`;\n          const content = record.content || record.description || record.details || \"\";\n          const createdDate = record.createdAt || record.updatedAt || record.date || new Date().toISOString();\n          const category = record.category || record.type || 'General';\n          const author = record.email || record.author || 'Author';\n          const role = record.role || 'Writer';\n          \n          return (\n            <article \n              key={record.id + Math.random() || index} \n              className=\"group bg-white border border-gray-200 hover:border-gray-300 hover:bg-gray-50 transition-all duration-200 rounded-lg p-6 shadow-sm hover:shadow-md\"\n            >\n              <div className=\"flex flex-col lg:flex-row lg:items-start lg:space-x-8\">\n                {/* Content Section */}\n                <div className=\"flex-1\">\n                  {/* Category & Reading Time */}\n                  <div className=\"flex items-center space-x-3 mb-3\">\n                    <span className=\"text-sm font-medium text-blue-600 hover:text-blue-800 transition-colors cursor-pointer\">\n                      {category}\n                    </span>\n                    <span className=\"text-gray-300\">•</span>\n                    <span className=\"text-sm text-gray-500\">\n                      {getReadingTime(content)}\n                    </span>\n                  </div>\n\n                  {/* Title */}\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-3 leading-tight group-hover:text-blue-600 transition-colors duration-200 cursor-pointer\">\n                    {title}\n                  </h2>\n\n                  {/* Content Preview */}\n                  {content && (\n                    <p className=\"text-gray-600 mb-4 leading-relaxed text-base\">\n                      {content.length > 200 ? content.substring(0, 200) + \"...\" : content}\n                    </p>\n                  )}\n\n                  {/* Author & Date */}\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-8 h-8 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center\">\n                        <span className=\"text-xs font-semibold text-white\">\n                          {getAuthorInitials(author)}\n                        </span>\n                      </div>\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900\">{author}</div>\n                        <div className=\"text-xs text-gray-500\">{role}</div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"text-right\">\n                      <div className=\"text-sm text-gray-500\">\n                        {formatDate(createdDate)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Image Section */}\n                <div className=\"lg:w-48 lg:h-32 w-full h-48 bg-gray-100 rounded-lg overflow-hidden flex-shrink-0 mt-4 lg:mt-0\">\n                  {record.imageUrl ? (\n                    <img \n                      src={record.imageUrl} \n                      alt={title}\n                      className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-200\"\n                      onError={(e) => {\n                        e.currentTarget.style.display = 'none';\n                        e.currentTarget.nextElementSibling?.classList.remove('hidden');\n                      }}\n                    />\n                  ) : null}\n                  <div className=\"w-full h-full flex items-center justify-center hidden\">\n                    <div className=\"text-center\">\n                      <svg className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1.5\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"/>\n                      </svg>\n                      <div className=\"text-xs text-gray-500\">No image</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Actions */}\n              <div className=\"flex items-center justify-between mt-6 pt-4 border-t border-gray-100\">\n                <div className=\"flex items-center space-x-6\">\n                  <button className=\"flex items-center space-x-2 text-gray-500 hover:text-blue-600 transition-colors text-sm\">\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"/>\n                    </svg>\n                    <span>24</span>\n                  </button>\n                  \n                  <button className=\"flex items-center space-x-2 text-gray-500 hover:text-green-600 transition-colors text-sm\">\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"/>\n                    </svg>\n                    <span>8</span>\n                  </button>\n                  \n                  <button className=\"flex items-center space-x-2 text-gray-500 hover:text-purple-600 transition-colors text-sm\">\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\"/>\n                    </svg>\n                    <span>Save</span>\n                  </button>\n                </div>\n                \n                <button className=\"text-blue-600 hover:text-blue-800 font-medium text-sm transition-colors\">\n                  Read more →\n                </button>\n              </div>\n            </article>\n          );\n        })}\n      </div>\n    </div>\n  );\n};",
      "type": "registry:component"
    }
  ]
}