{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "magazine-layout",
  "type": "registry:component",
  "title": "Magazine Layout",
  "description": "Magazine-style article list layout for editorial content",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/default/magazine-layout/custom-magazine-layout.tsx",
      "content": "import React from 'react';\n\n// Common blog-style layout renderer\nexport const MagazineLayout = (data: any[], options: any) => {\n  const formatDate = (dateString: string) => {\n    if (!dateString) return \"Unknown\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { \n      year: 'numeric',\n      month: 'short', \n      day: 'numeric'\n    });\n  };\n\n  const getReadingTime = (content: string) => {\n    if (!content) return \"5 min read\";\n    const words = content.split(' ').length;\n    const minutes = Math.ceil(words / 200);\n    return `${minutes} min read`;\n  };\n\n  const getAuthorInitials = (name: string) => {\n    if (!name) return \"??\";\n    return name.split(' ').map(word => word[0]).join('').toUpperCase().slice(0, 2);\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto px-6 py-8\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-8\">\n        {data.map((record, index) => {\n          const title = record.name || record.title || `Article ${index + 1}`;\n          const content = record.content || record.description || record.details || \"\";\n          const createdDate = record.createdAt || record.updatedAt || record.date || new Date().toISOString();\n          const category = record.category || record.type || 'General';\n          const author = record.email || record.author || 'Author';\n          \n          // Featured article (first one, spans more columns)\n          if (index === 0) {\n            return (\n              <article \n                key={record.id + Math.random() || index} \n                className=\"lg:col-span-8 group cursor-pointer\"\n              >\n                <div className=\"bg-white rounded-xl overflow-hidden shadow-sm hover:shadow-md transition-shadow duration-200\">\n                  {/* Featured Image */}\n                  <div className=\"aspect-[16/9] bg-gradient-to-br from-gray-100 to-gray-200 relative overflow-hidden\">\n                    {record.imageUrl ? (\n                      <img \n                        src={record.imageUrl} \n                        alt={title}\n                        className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                      />\n                    ) : (\n                      <div className=\"w-full h-full flex items-center justify-center\">\n                        <div className=\"text-center\">\n                          <div className=\"text-6xl font-bold text-gray-300 mb-2\">M</div>\n                          <div className=\"text-sm text-gray-400\">Magazine Featured</div>\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* Category Badge */}\n                    <div className=\"absolute top-4 left-4\">\n                      <span className=\"bg-blue-600 text-white text-sm px-3 py-1 rounded-full font-medium\">\n                        {category}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  {/* Content */}\n                  <div className=\"p-6\">\n                    <h1 className=\"text-3xl font-bold text-gray-900 mb-4 leading-tight group-hover:text-blue-600 transition-colors\">\n                      {title}\n                    </h1>\n                    \n                    {content && (\n                      <p className=\"text-gray-600 text-lg leading-relaxed mb-6\">\n                        {content.substring(0, 200)}...\n                      </p>\n                    )}\n                    \n                    {/* Author & Meta */}\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"w-10 h-10 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center\">\n                          <span className=\"text-sm font-semibold text-white\">\n                            {getAuthorInitials(author)}\n                          </span>\n                        </div>\n                        <div>\n                          <div className=\"font-medium text-gray-900\">{author}</div>\n                          <div className=\"text-sm text-gray-500\">{formatDate(createdDate)}</div>\n                        </div>\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        {getReadingTime(content)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </article>\n            );\n          }\n          \n          // Secondary articles (smaller cards)\n          return (\n            <article \n              key={record.id + Math.random() || index} \n              className=\"lg:col-span-4 group cursor-pointer\"\n            >\n              <div className=\"bg-white rounded-lg overflow-hidden border border-gray-200 hover:shadow-md transition-all duration-200\">\n                {/* Image */}\n                <div className=\"aspect-[16/10] bg-gradient-to-br from-gray-100 to-gray-200 relative overflow-hidden\">\n                  {record.imageUrl ? (\n                    <img \n                      src={record.imageUrl} \n                      alt={title}\n                      className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                    />\n                  ) : (\n                    <div className=\"w-full h-full flex items-center justify-center\">\n                      <div className=\"text-2xl font-bold text-gray-300\">\n                        {title.charAt(0)}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Content */}\n                <div className=\"p-4\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <span className=\"text-xs font-medium text-blue-600 bg-blue-50 px-2 py-1 rounded\">\n                      {category}\n                    </span>\n                    <span className=\"text-xs text-gray-500\">\n                      {formatDate(createdDate)}\n                    </span>\n                  </div>\n                  \n                  <h2 className=\"font-semibold text-gray-900 mb-2 leading-tight group-hover:text-blue-600 transition-colors\">\n                    {title}\n                  </h2>\n                  \n                  {content && (\n                    <p className=\"text-sm text-gray-600 mb-3 leading-relaxed\">\n                      {content.substring(0, 100)}...\n                    </p>\n                  )}\n                  \n                  <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                    <span>{author}</span>\n                    <span>{getReadingTime(content)}</span>\n                  </div>\n                </div>\n              </div>\n            </article>\n          );\n        })}\n      </div>\n    </div>\n  );\n};",
      "type": "registry:component"
    }
  ]
}